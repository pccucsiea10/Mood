// Generated by view binder compiler. Do not edit!
package com.ehappy.mood.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.TextView;
import com.ehappy.mood.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBreakTimeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Breaktime;

  @NonNull
  public final Button back2;

  @NonNull
  public final Chronometer countDown1;

  @NonNull
  public final Button start2;

  private ActivityBreakTimeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Breaktime,
      @NonNull Button back2, @NonNull Chronometer countDown1, @NonNull Button start2) {
    this.rootView = rootView;
    this.Breaktime = Breaktime;
    this.back2 = back2;
    this.countDown1 = countDown1;
    this.start2 = start2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBreakTimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBreakTimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_break_time, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBreakTimeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Breaktime;
      TextView Breaktime = ViewBindings.findChildViewById(rootView, id);
      if (Breaktime == null) {
        break missingId;
      }

      id = R.id.back2;
      Button back2 = ViewBindings.findChildViewById(rootView, id);
      if (back2 == null) {
        break missingId;
      }

      id = R.id.count_down1;
      Chronometer countDown1 = ViewBindings.findChildViewById(rootView, id);
      if (countDown1 == null) {
        break missingId;
      }

      id = R.id.start2;
      Button start2 = ViewBindings.findChildViewById(rootView, id);
      if (start2 == null) {
        break missingId;
      }

      return new ActivityBreakTimeBinding((ConstraintLayout) rootView, Breaktime, back2, countDown1,
          start2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
